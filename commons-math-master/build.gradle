/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id 'java'
    id 'maven-publish'
}

repositories {
    mavenLocal()
    maven {
        url = uri('https://repository.apache.org/snapshots')
    }

    maven {
        url = uri('http://repo.maven.apache.org/maven2')
    }
}

dependencies {
    implementation 'org.apache.commons:commons-statistics-distribution:1.0-SNAPSHOT'
    implementation 'org.apache.commons:commons-numbers-core:1.0-SNAPSHOT'
    implementation 'org.apache.commons:commons-numbers-complex:1.0-SNAPSHOT'
    implementation 'org.apache.commons:commons-numbers-complex-streams:1.0-SNAPSHOT'
    implementation 'org.apache.commons:commons-numbers-gamma:1.0-SNAPSHOT'
    implementation 'org.apache.commons:commons-numbers-combinatorics:1.0-SNAPSHOT'
    implementation 'org.apache.commons:commons-numbers-arrays:1.0-SNAPSHOT'
    implementation 'org.apache.commons:commons-numbers-angle:1.0-SNAPSHOT'
    implementation 'org.apache.commons:commons-numbers-rootfinder:1.0-SNAPSHOT'
    implementation 'org.apache.commons:commons-numbers-field:1.0-SNAPSHOT'
    implementation 'org.apache.commons:commons-numbers-quaternion:1.0-SNAPSHOT'
    implementation 'org.apache.commons:commons-rng-client-api:1.2'
    implementation 'org.apache.commons:commons-rng-simple:1.2'
    implementation 'org.apache.commons:commons-rng-sampling:1.2'
    implementation 'org.apache.commons:commons-geometry-euclidean:1.0-SNAPSHOT'
    testImplementation 'org.openjdk.jmh:jmh-core:1.13'
    testImplementation 'org.openjdk.jmh:jmh-generator-annprocess:1.13'
    testImplementation 'junit:junit:4.13.1'
}

group = 'org.apache.commons'
version = '4.0-SNAPSHOT'
description = 'Apache Commons Math'
sourceCompatibility = '1.8'

configurations.all {
}

tasks.register('testsJar', Jar) {
    archiveClassifier = 'tests'
    from(sourceSets.test.output)
}

java {
    withSourcesJar()
}

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
            artifact(testsJar)
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}
